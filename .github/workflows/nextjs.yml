# Workflow for deploying a Next.js site to GitHub Pages
name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
          elif [ -f "package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "runner=npx --no-install" >> $GITHUB_ENV
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: ${{ env.manager }}

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Check Next.js Configuration
        run: |
          if ! grep -q "output: 'export'" next.config.js; then
            echo "⚠️ Warning: 'output: export' is missing in next.config.js!"
            exit 1
          fi

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: nextjs-${{ runner.os }}-${{ hashFiles('package-lock.json', 'yarn.lock') }}-${{ hashFiles('pages/**', 'components/**', 'styles/**', 'public/**') }}
          restore-keys: |
            nextjs-${{ runner.os }}-

      - name: Install Dependencies
        run: ${{ env.manager }} install

      - name: Build Next.js App
        run: ${{ env.runner }} next build

      - name: Export Static HTML
        run: ${{ env.runner }} next export

      - name: Debug Artifacts
        run: ls -R ./out

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Debug Available Artifacts
        run: echo "Available Artifacts:" && ls -R ${{ runner.temp }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
